@model PaginatedList<OutcomesFirst.Models.Referral>

@{
    ViewData["Title"] = "Referrals";
}

<p>
    <h3>Referrals</h3>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
               @* @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IDSortParam })*@
            </th>
            <th>
                Gender
            </th>

            <th>
                Age
            </th>
            <th>
                Local Authority
            </th>
            <th>
                Received Date
            </th>
            <th>
                Status
            </th>
            <th>
                Submissions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (DateTime.Now > item.ReferralReceivedDate.AddHours(2) && item.Submissions.Count() == 0)
            {
                <tr style="background-color:red">
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralGender.GenderName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralAge)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.ReferralLocalAuthority.LocalAuthorityName)

                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralReceivedDate)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralStatus.StatusName)
                    </td>
                    <td>
                        @{
                            var count = 0;
                            if (item.Submissions != null)
                            {
                                count = item.Submissions.Count();
                            }
                        }
                        @Html.DisplayFor(modelItem => count)
                    </td>


                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ReferralId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ReferralId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ReferralId">Delete</a>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralGender.GenderName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralAge)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.ReferralLocalAuthority.LocalAuthorityName)

                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralReceivedDate)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReferralStatus.StatusName)
                    </td>
                    <td>
                        @{
                            var count = 0;
                            if (item.Submissions != null)
                            {
                                count = item.Submissions.Count();
                            }
                        }
                        @Html.DisplayFor(modelItem => count)
                    </td>



                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ReferralId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ReferralId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ReferralId">Delete</a>
                    </td>
                </tr>



            }
        }
       
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>






